// ==UserScript==
// @name         meaningful-forks
// @homepage     https://github.com/aflowofcode/meaningful-forks
// @namespace    http://tampermonkey.net/
// @version      1.2.0
// @description  Sort Github fork lists by the number of stars and commits ahead from the source repo.
// @author       Kevin Li + community
// @match        https://github.com/*
// @grant        none
// ==/UserScript==

!async function(){let e="ENTER_ACCESS_TOKEN_HERE",t=50,o=3;await async function e(t,o){let n=document.querySelectorAll(t);if(n&&n.length>0){let r=!1;if(n.forEach(function(e){"alreadyFound"!=e.dataset.found&&(e.dataset.found="alreadyFound",r=!0)}),r)return void o().finally(()=>{setTimeout(()=>{e(t,o)},1e3)})}setTimeout(()=>{e(t,o)},1e3)}("#network>.repo",async function(){let n=new Headers;n.append("Authorization","token "+e);const r={headers:n},a=document.createElement("span");a.innerText="📊 Meaningful Forks is gathering data...",a.style.background="#22f922",a.style.borderRadius="10px",a.style.color="black",a.style.fontWeight="bold",a.style.padding="10px",a.style.width="max-content",a.style.height="calc(20px + 1.5em)",a.style.bottom="calc(10vh - 40px)",a.style.left="0",a.style.right="0",a.style.zIndex="9999",a.style.position="fixed",a.style.margin="0 auto",document.body.appendChild(a),document.querySelector(".footer").style["margin-bottom"]="5vh";const s=document.querySelector("#network"),l=s.querySelectorAll(".repo")[0].lastElementChild.getAttribute("href").substring(1);o<2&&console.log("TCL: currentRepoUrl",l);const i=l.substring(0,l.lastIndexOf("/")),c=`https://api.github.com/repos/${l}/forks?sort=stargazers&per_page=${t}`;o<2&&console.log("TCL: forkApiUrl",c);let d=await fetch(c,r).then(e=>{if(e.ok)return e.json();throw new Error(`Failed to get the api url, exiting with status: ${e.status}`)}).then(e=>e).catch(e=>{o<5&&console.log(e),a.innerText="Problem accessing API. If you've entered your personal access token & this always happens here, this repo probably doesn't allow API access 😕",setTimeout(()=>{a.remove()},7500)}),u=[],h=[];await Promise.all(d.map(async e=>{if(e.forks>0){o<2&&console.log(`${e.full_name} has ${e.forks} subforks`);let n=await fetch(e.forks_url+`?sort=stargazers&per_page=${t}`,r);(await n.json()).forEach(t=>{t.pushed_at!==e.pushed_at?(t.is_subfork=!0,t.forked_from=e.full_name,u=u.concat(t)):h.push(t)})}})),o<2&&console.log(`Found ${u.length} relevant subforks`,u);let f=d.concat(u);o<2&&console.log("TCL: forks.length: "+f.length);const p=[];let g=[];var m,b,y,w;a.innerText="✨ Updating stars...",await Promise.all(f.map(async(e,t,n)=>{if(void 0===e.owner)return o<2&&console.log("marking bad fork for delete",t,e),void g.push(t);const a=e.owner.login;if(o<2&&console.log("TCL: authorName",a,t),"undefined"===a)return;const s=e.stargazers_url;p.push(await fetch(s,r).then(e=>{if(e.ok)return e.json();throw new Error("Network response is not OK!")}).then(e=>{e.forEach(e=>{e.login===a&&n[t].stargazers_count>0&&(o<2&&console.log(`TCL: starCount of ${a} before: ${n[t].stargazers_count}`),n[t].stargazers_count--,o<2&&console.log(`TCL: starCount of ${a} after: ${n[t].stargazers_count}`))})}).catch(function(t){o<5&&console.log("There has been a problem with your fetch operation: ",t.message,e)}))})),o<2&&console.log(`found ${g.length} forks with bad data out of ${f.length}`,g),g.length>0&&(g=C(g)),await Promise.all(p),f.sort((m="stargazers_count",b=!0,y=parseInt,w=y?function(e){return y(e[m])}:function(e){return e[m]},b=b?-1:1,function(e,t){return e=w(e),t=w(t),b*((e>t)-(t>e))})),o<2&&console.log("End of modifying stargazer count!"),a.innerText="🍴 Sorting forks (might take a sec)...";let _=await async function(e){return k(`https://api.github.com/repos/${e}`,"default_branch")}(l);async function k(e,t){let o=await fetch(e,r).then(e=>e.json());if("string"==typeof t)return n(o,t);if(Array.isArray(t))return t.map(e=>n(o,e));function n(e,t){if(t.indexOf(".")>=0){let o=e;return t.split(".").forEach(e=>{o=o[e]}),o}return e[t]}}function v(e){const t="http://www.w3.org/2000/svg";var o=document.createElementNS(t,"svg");o.setAttribute("height",12),o.setAttribute("width",10.5),o.setAttribute("viewBox","0 0 14 16"),o.style["vertical-align"]="middle",o.style.fill="currentColor",o.style.position="relative",o.style.bottom="1px",o.style["margin-left"]="8px",o.classList.add("opticon","opticon-"+e);var n=document.createElementNS(t,"title"),r=document.createElementNS(t,"path");switch(e){case"star":n.appendChild(document.createTextNode("Number of real stars (excluding author's star)")),r.setAttribute("d","M14 6l-4.9-0.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14l4.33-2.33 4.33 2.33L10.4 9.26 14 6z");break;case"up":n.appendChild(document.createTextNode("Number of commits ahead")),r.setAttribute("d","M5 3L0 9h3v4h4V9h3L5 3z"),r.setAttribute("fill","#84ed47"),o.setAttribute("viewBox","0 0 10 16"),o.setAttribute("height",16);break;case"flame":n.appendChild(document.createTextNode("Fork may be more recent than upstream.")),r.setAttribute("d","M5.05 0.31c0.81 2.17 0.41 3.38-0.52 4.31-0.98 1.05-2.55 1.83-3.63 3.36-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-0.3-6.61-0.61 2.03 0.53 3.33 1.94 2.86 1.39-0.47 2.3 0.53 2.27 1.67-0.02 0.78-0.31 1.44-1.13 1.81 3.42-0.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52 0.13-2.03 1.13-1.89 2.75 0.09 1.08-1.02 1.8-1.86 1.33-0.67-0.41-0.66-1.19-0.06-1.78 1.25-1.23 1.75-4.09-1.88-6.22l-0.02-0.02z"),r.setAttribute("fill","#d26911")}return r.appendChild(n),o.appendChild(r),o}function C(e){for(let t=0;t<e.length;t++)o<2&&console.log("deleting:",f[e[t]]),delete f[e[t]];return f=f.filter(e=>void 0!==e),o<2&&console.log(`${f.length} remaining forks`),[]}await async function(e,t){const o=[];for(let n=0;n<e.length;n++)o.push(t(e[n],n,e));return Promise.all(o)}(f,async(e,t,n)=>{try{const r=e.owner.login,a=e.full_name,s=e.default_branch,l=`https://api.github.com/repos/${a}/compare/${i}:${_}...${r}:${s}`;await k(l,["ahead_by","behind_by"]).then(e=>{n[t].ahead_by=e[0],n[t].behind_by=e[1]})}catch(e){o<5&&console.log(e)}if(e.is_subfork&&0===e.ahead_by)return o<2&&console.log("marking subfork ahead_by 0 for delete",t,e.full_name),void g.push(t)}),o<2&&console.log(`found ${g.length} subforks ahead_by 0 out of ${f.length}`,g),g.length>0&&(g=C(g)),a.innerText="🔀 Rearranging order...",f.sort(function(){var e=[].slice.call(arguments),t=e.length;return function(o,n){var r,a,s,l,i,c,d;for(d=0;d<t&&(c=0,s=e[d],l="string"==typeof s?s:s.name,r=o[l],a=n[l],void 0!==s.primer&&(r=s.primer(r),a=s.primer(a)),i=s.highToLow?-1:1,r<a&&(c=-1*i),r>a&&(c=1*i),0===c);d++);return c}}({name:"stargazers_count",primer:parseInt,highToLow:!0},{name:"ahead_by",primer:parseInt,highToLow:!0},{name:"behind_by",primer:parseInt,highToLow:!1})),o<2&&console.log("Beginning of DOM operations!"),f.reverse().forEach(e=>{o<2&&console.log("TCL: fork",e);const t=e.full_name,n=e.stargazers_count;let r=!1;const a=s.querySelectorAll("div.repo"),l=a.length>2?a[1].querySelector("svg"):void 0;for(let n=0;n<a.length;n++){const s=a[n].lastElementChild.getAttribute("href");if(s&&s.substring(1)===t){if(r=!0,e.hasOwnProperty("is_subfork")&&e.is_subfork){o<2&&console.log("adding dagger to subfork");const e=document.createTextNode("‡"),t=a[n].querySelectorAll("svg");l&&t[0].replaceWith(l.cloneNode(!0)),t[1].replaceWith(e)}i(a[n]);break}}if(!r){o<2&&console.log(`${t} repo wasn't showing`);const n=document.createElement("div");n.dataset.found="alreadyFound",n.classList.add("repo");const r=e.owner.type.toLowerCase(),a=document.createElement("a");a.setAttribute("data-hovercard-type",r);const s=e.owner.login;if("user"===r){const t=e.owner.id;a.setAttribute("data-hovercard-url",`/hovercards?user_id=${t}`)}else"organization"===r&&(a.setAttribute("data-hovercard-url",`/orgs/${s}/hovercard`),a.setAttribute("href",`/${s}`));a.setAttribute("href",`/${s}`),a.setAttribute("data-octo-click","hovercard-link-click"),a.setAttribute("data-octo-dimensions","link_type:self");const c=a.cloneNode(!0);c.style.paddingLeft="4px",c.style.paddingRight="4px",a.innerText=s,c.classList.add("d-inline-block");const d=document.createElement("img");d.classList.add("gravatar");const u=e.owner.avatar_url;d.src=u,d.width="16",d.height="16",d.alt=`@${s}`,c.appendChild(d);const h=document.createElement("a");h.style.paddingRight="4px",h.setAttribute("href",`/${t}`),h.innerText=e.name,n.appendChild(l.cloneNode(!0)),n.appendChild(c),n.appendChild(a),n.appendChild(document.createTextNode(" / ")),n.appendChild(h),i(n)}function i(t){o<2&&console.log("adding status",t);const r=document.createDocumentFragment();if(r.appendChild(v("star")),r.appendChild(document.createTextNode(n+" ")),void 0!==e.ahead_by&&void 0!==e.behind_by){if(e.ahead_by>0){const t=v("up");r.appendChild(t),r.appendChild(document.createTextNode(e.ahead_by+" "))}e.ahead_by-e.behind_by>0&&r.appendChild(v("flame"))}if(e.is_subfork){const t=document.createElement("span");t.appendChild(document.createTextNode(` (subfork of ${e.forked_from})`)),t.style["margin-left"]="8px",r.appendChild(t)}t.appendChild(r),s.firstElementChild.insertAdjacentElement("afterend",t)}e.hasOwnProperty("stargazers_count")&&o<2&&console.log("TCL: starCount",e.stargazers_count)}),o<2&&console.log("finished sorting"),a.remove()})}();