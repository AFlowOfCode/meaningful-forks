// ==UserScript==
// @name         meaningful-forks
// @homepage     https://github.com/aflowofcode/meaningful-forks
// @namespace    http://tampermonkey.net/
// @version      1.2.0
// @description  Sort Github fork lists by the number of stars and commits ahead from the source repo.
// @author       Kevin Li + community
// @match        https://github.com/*/network/members
// @grant        none
// ==/UserScript==
!async function(){let e=new Headers;e.append("Authorization","token <YOUR ACCESS TOKEN>");const t={headers:e},o=document.createElement("span");o.innerText="📊 Meaningful Forks is gathering data...",o.style.background="#22f922",o.style.borderRadius="10px",o.style.color="black",o.style.fontWeight="bold",o.style.padding="10px",o.style.width="max-content",o.style.height="calc(20px + 1.5em)",o.style.zIndex="9999",o.style.position="fixed",o.style.inset="0",o.style.margin="auto",document.body.appendChild(o);const r=document.querySelector("#network"),n=r.querySelectorAll(".repo")[0].lastElementChild.getAttribute("href").substring(1);console.log("TCL: currentRepoUrl",n);const a=n.substring(0,n.lastIndexOf("/")),s=`https://api.github.com/repos/${n}/forks?sort=stargazers`;console.log("TCL: forkApiUrl",s);let i=await fetch(s,t).then(e=>{if(e.ok)return e.json();throw new Error(`Failed to get the api url, exiting with status: ${e.status}`)}).then(e=>e).catch(e=>{console.log(e),o.innerText="Problem accessing API. If you've entered your personal access token & this always happens here, this repo probably doesn't allow API access 😕",setTimeout(()=>{o.remove()},7500)}),l=[],c=[];await Promise.all(i.map(async e=>{if(e.forks>0){console.log(`${e.full_name} has ${e.forks} subforks`);let o=await fetch(e.forks_url+"?sort=stargazers",t);(await o.json()).forEach(t=>{t.pushed_at!==e.pushed_at?(t.is_subfork=!0,t.forked_from=e.full_name,l=l.concat(t)):c.push(t)})}})),console.log(`Found ${l.length} relevant subforks`,l);let d=i.concat(l);console.log("TCL: forks.length: "+d.length);const u=[];let h=[];var g,p,f,m;o.innerText="✨ Updating stars...",await Promise.all(d.map(async(e,o,r)=>{if(void 0===e.owner)return console.log("marking bad fork for delete",o,e),void h.push(o);const n=e.owner.login;if(console.log("TCL: authorName",n,o),"undefined"===n)return;const a=e.stargazers_url;u.push(await fetch(a,t).then(e=>{if(e.ok)return e.json();throw new Error("Network response is not OK!")}).then(e=>{e.forEach(e=>{e.login===n&&r[o].stargazers_count>0&&(console.log(`TCL: starCount of ${n} before: ${r[o].stargazers_count}`),r[o].stargazers_count--,console.log(`TCL: starCount of ${n} after: ${r[o].stargazers_count}`))})}).catch(function(t){console.log("There has been a problem with your fetch operation: ",t.message,e),h.push(o)}))})),console.log(`found ${h.length} forks with bad data out of ${d.length}`,h),h.length>0&&(h=k(h)),await Promise.all(u),d.sort((g="stargazers_count",p=!0,f=parseInt,m=f?function(e){return f(e[g])}:function(e){return e[g]},p=p?-1:1,function(e,t){return e=m(e),t=m(t),p*((e>t)-(t>e))})),console.log("End of modifying stargazer count!"),o.innerText="🍴 Sorting forks (might take a sec)...";let b=await async function(e){return y(`https://api.github.com/repos/${e}`,"default_branch")}(n);async function y(e,o){let r,n=await fetch(e,t);if(!n.ok)throw new Error("Network response is not OK!");if(r=await n.json(),"string"==typeof o)return a(r,o);if(Array.isArray(o))return o.map(e=>a(r,e));function a(e,t){if(t.indexOf(".")>=0){let o=e;return t.split(".").forEach(e=>{o=o[e]}),o}return e[t]}}function w(e){const t="http://www.w3.org/2000/svg";var o=document.createElementNS(t,"svg");o.setAttribute("height",12),o.setAttribute("width",10.5),o.setAttribute("viewBox","0 0 14 16"),o.style["vertical-align"]="middle",o.style.fill="currentColor",o.style.position="relative",o.style.bottom="1px",o.classList.add("opticon","opticon-"+e);var r=document.createElementNS(t,"title"),n=document.createElementNS(t,"path");switch(e){case"star":r.appendChild(document.createTextNode("Number of real stars (excluding author's star)")),n.setAttribute("d","M14 6l-4.9-0.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14l4.33-2.33 4.33 2.33L10.4 9.26 14 6z"),n.setAttribute("fill","black");break;case"up":r.appendChild(document.createTextNode("Number of commits ahead")),n.setAttribute("d","M5 3L0 9h3v4h4V9h3L5 3z"),n.setAttribute("fill","#84ed47"),o.setAttribute("viewBox","0 0 10 16"),o.setAttribute("height",16);break;case"flame":r.appendChild(document.createTextNode("Fork may be more recent than upstream.")),n.setAttribute("d","M5.05 0.31c0.81 2.17 0.41 3.38-0.52 4.31-0.98 1.05-2.55 1.83-3.63 3.36-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-0.3-6.61-0.61 2.03 0.53 3.33 1.94 2.86 1.39-0.47 2.3 0.53 2.27 1.67-0.02 0.78-0.31 1.44-1.13 1.81 3.42-0.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52 0.13-2.03 1.13-1.89 2.75 0.09 1.08-1.02 1.8-1.86 1.33-0.67-0.41-0.66-1.19-0.06-1.78 1.25-1.23 1.75-4.09-1.88-6.22l-0.02-0.02z"),n.setAttribute("fill","#d26911")}return n.appendChild(r),o.appendChild(n),o}function k(e){for(let t=0;t<e.length;t++)console.log("deleting:",d[e[t]]),delete d[e[t]];return d=d.filter(e=>void 0!==e),console.log(`${d.length} remaining forks`),[]}await async function(e,t){const o=[];for(let r=0;r<e.length;r++)o.push(t(e[r],r,e));return Promise.all(o)}(d,async(e,t,o)=>{try{const r=e.owner.login,n=e.full_name,s=e.default_branch,i=`https://api.github.com/repos/${n}/compare/${a}:${b}...${r}:${s}`;let[l,c]=await y(i,["ahead_by","behind_by"]);o[t].ahead_by=l,o[t].behind_by=c}catch(e){console.log(e)}if(e.is_subfork&&0===e.ahead_by)return console.log("marking subfork ahead_by 0 for delete",t,e.full_name),void h.push(t)}),console.log(`found ${h.length} subforks ahead_by 0 out of ${d.length}`,h),h.length>0&&(h=k(h)),o.innerText="🔀 Rearranging order...",d.sort(function(){var e=[].slice.call(arguments),t=e.length;return function(o,r){var n,a,s,i,l,c,d;for(d=0;d<t&&(c=0,s=e[d],i="string"==typeof s?s:s.name,n=o[i],a=r[i],void 0!==s.primer&&(n=s.primer(n),a=s.primer(a)),l=s.highToLow?-1:1,n<a&&(c=-1*l),n>a&&(c=1*l),0===c);d++);return c}}({name:"stargazers_count",primer:parseInt,highToLow:!0},{name:"ahead_by",primer:parseInt,highToLow:!0},{name:"behind_by",primer:parseInt,highToLow:!1})),console.log("Beginning of DOM operations!"),d.reverse().forEach(e=>{console.log("TCL: fork",e);const t=e.full_name,o=e.stargazers_count;let n=!1;const a=r.querySelectorAll("div.repo"),s=a.length>2?a[1].querySelector("svg"):void 0;for(let o=0;o<a.length;o++){const r=a[o].lastElementChild.getAttribute("href");if(r){if(r.substring(1)===t){if(n=!0,e.hasOwnProperty("is_subfork")&&e.is_subfork){console.log("adding dagger to subfork");const e=document.createTextNode("‡"),t=a[o].querySelectorAll("svg");s&&t[0].replaceWith(s.cloneNode(!0)),t[1].replaceWith(e)}i(a[o]);break}}}if(!n){console.log(`${t} repo wasn't showing`);const o=document.createElement("div");o.classList.add("repo");const r=e.owner.type.toLowerCase(),n=document.createElement("a");n.setAttribute("data-hovercard-type",r);const a=e.owner.login;if("user"===r){const t=e.owner.id;n.setAttribute("data-hovercard-url",`/hovercards?user_id=${t}`)}else"organization"===r&&(n.setAttribute("data-hovercard-url",`/orgs/${a}/hovercard`),n.setAttribute("href",`/${a}`));n.setAttribute("href",`/${a}`),n.setAttribute("data-octo-click","hovercard-link-click"),n.setAttribute("data-octo-dimensions","link_type:self");const l=n.cloneNode(!0);l.style.paddingLeft="4px",l.style.paddingRight="4px",n.innerText=a,l.classList.add("d-inline-block");const c=document.createElement("img");c.classList.add("gravatar");const d=e.owner.avatar_url;c.src=d,c.width="16",c.height="16",c.alt=`@${a}`,l.appendChild(c);const u=document.createElement("a");u.style.paddingRight="4px",u.setAttribute("href",`/${t}`),u.innerText=e.name,o.appendChild(s.cloneNode(!0)),o.appendChild(l),o.appendChild(n),o.appendChild(document.createTextNode(" / ")),o.appendChild(u),i(o)}function i(t){console.log("adding status",t);const n=document.createDocumentFragment();if(n.appendChild(w("star")),n.appendChild(document.createTextNode(o+" ")),e.ahead_by>0){const t=w("up");n.appendChild(t),n.appendChild(document.createTextNode(e.ahead_by+" "))}e.ahead_by-e.behind_by>0&&n.appendChild(w("flame")),e.is_subfork&&n.appendChild(document.createTextNode(` (subfork of ${e.forked_from})`)),t.appendChild(n),r.firstElementChild.insertAdjacentElement("afterend",t)}e.hasOwnProperty("stargazers_count")&&console.log("TCL: starCount",e.stargazers_count)}),console.log("finished sorting"),o.remove()}();